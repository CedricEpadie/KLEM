# Generated by Django 5.1.1 on 2024-10-31 22:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie_article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Categorie_article',
                'verbose_name_plural': 'Categorie_articles',
            },
        ),
        migrations.CreateModel(
            name='Mode_Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Mode_Paiement',
                'verbose_name_plural': 'Mode_Paiements',
                'ordering': ['-nom'],
            },
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('code_tel', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Pays',
                'verbose_name_plural': 'Pays',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.CharField(max_length=300)),
                ('telephone', models.IntegerField()),
                ('is_couturier', models.BooleanField(default=False, verbose_name='Status couturier')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('pays', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='klemapp.pays')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=200)),
                ('etat_compte', models.CharField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Administrateur',
                'verbose_name_plural': 'Administrateurs',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('administrateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_admin', to='klemapp.administrateur')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorie_article', to='klemapp.categorie_article')),
            ],
            options={
                'verbose_name': 'Arcticle',
                'verbose_name_plural': 'Arcticles',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField()),
                ('montant_total', models.FloatField()),
                ('etat_commande', models.CharField(max_length=200)),
                ('address_livraison', models.CharField(max_length=200)),
                ('address_facturation', models.CharField(max_length=200)),
                ('remise', models.FloatField()),
                ('etat_livraison', models.CharField(max_length=200)),
                ('date_livraison', models.DateField()),
                ('administrateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administrateur', to='klemapp.administrateur')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client', to='klemapp.client')),
                ('moyen_paiement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mode_paiement', to='klemapp.mode_paiement')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-etat_commande'],
            },
        ),
        migrations.CreateModel(
            name='Couturier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('specialite', models.CharField(max_length=300)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Couturier',
                'verbose_name_plural': 'Couturiers',
            },
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('note', models.IntegerField()),
                ('administrateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commentaire_admin', to='klemapp.administrateur')),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commentaire_article', to='klemapp.article')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commentaire_client', to='klemapp.client')),
                ('couturier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commentaire_couturier', to='klemapp.couturier')),
            ],
            options={
                'verbose_name': 'Commentaire',
                'verbose_name_plural': 'Commentaires',
            },
        ),
        migrations.CreateModel(
            name='Devis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.FloatField()),
                ('description', models.TextField()),
                ('etat_devis', models.CharField(max_length=200)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('administrateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administrateur_devis', to='klemapp.administrateur')),
                ('commande', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devis_commande', to='klemapp.commande')),
                ('couturier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devis_couturier', to='klemapp.couturier')),
            ],
            options={
                'verbose_name': 'Devis',
                'verbose_name_plural': 'Devis',
            },
        ),
        migrations.CreateModel(
            name='Abonnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_abonnement', models.CharField(max_length=200)),
                ('montant', models.FloatField()),
                ('duree', models.IntegerField()),
                ('frequence_paiement', models.IntegerField()),
                ('data_paiement', models.DateField()),
                ('etat', models.CharField(max_length=200)),
                ('remise', models.FloatField()),
                ('nbre_renouvellement', models.IntegerField()),
                ('moyen_paiement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moyen_paiement', to='klemapp.mode_paiement')),
            ],
            options={
                'verbose_name': 'Abonnement',
                'verbose_name_plural': 'Abonnements',
                'ordering': ['-type_abonnement'],
            },
        ),
        migrations.CreateModel(
            name='Souscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('abonnement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET, related_name='abonnement', to='klemapp.abonnement')),
                ('couturier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET, related_name='couturier_souscription', to='klemapp.couturier')),
            ],
            options={
                'verbose_name': 'Souscription',
                'verbose_name_plural': 'Souscriptions',
                'ordering': ['-abonnement'],
            },
        ),
        migrations.CreateModel(
            name='Article_tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article', to='klemapp.article')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag', to='klemapp.tag')),
            ],
            options={
                'verbose_name': 'Article_tag',
                'verbose_name_plural': 'Article_tags',
            },
        ),
        migrations.CreateModel(
            name='Vetement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('type_vetement', models.CharField(max_length=200)),
                ('genre', models.CharField(max_length=200)),
                ('prix', models.FloatField()),
                ('image', models.ImageField(upload_to='images/')),
                ('disponibilite', models.CharField(max_length=200)),
                ('couturier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='couturier', to='klemapp.couturier')),
            ],
            options={
                'verbose_name': 'Vetement',
                'verbose_name_plural': 'Vetements',
                'ordering': ['-nom'],
            },
        ),
        migrations.CreateModel(
            name='Vetement_commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_commande', models.DateField()),
                ('couleur', models.CharField(max_length=200)),
                ('matiere', models.CharField(max_length=200)),
                ('taille', models.CharField(max_length=200)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commande', to='klemapp.commande')),
                ('vetement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vetement', to='klemapp.vetement')),
            ],
            options={
                'verbose_name': 'Vetement_commande',
                'verbose_name_plural': 'Vetement_commandes',
            },
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('pays', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pays', to='klemapp.pays')),
            ],
            options={
                'verbose_name': 'Ville',
                'verbose_name_plural': 'Villes',
                'ordering': ['nom'],
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='ville',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_list', to='klemapp.ville'),
        ),
    ]
